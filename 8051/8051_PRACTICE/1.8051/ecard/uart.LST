C51 COMPILER V9.02   UART                                                                  12/02/2023 18:12:59 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include "delay.h"
   3          #include "uart.h"
   4          
   5          //initialisation of onchip uart functionality using mode1 with 9600 baudrate
   6          void UART_Init(void)
   7          {
   8   1              SCON = 0x50;
   9   1              TMOD = 0x20; //timer1 mode2 (auto-reload mode)
  10   1              TH1 = 253;
  11   1              TR1 = 1;
  12   1      }
  13          //sending one character from 8051 cpu to external uart based device
  14          void UART_Txchar(unsigned char ch)
  15          {
  16   1              SBUF = ch;//writing 8-bit data into SBUF register
  17   1              while(TI == 0);
  18   1              TI = 0;
  19   1      }
  20          //receiving one character from external uart based device to 8051 cpu
  21          unsigned char UART_Rxchar(void)
  22          {
  23   1              while(RI == 0);
  24   1              RI = 0;
  25   1              return SBUF;//reading data from SBUF register
  26   1      
  27   1      }
  28          //sending one string to uart based device form 8051 cpu
  29          void UART_Str(unsigned char *str)
  30          {
  31   1              while(*str != '\0')
  32   1                      UART_Txchar(*str++);
  33   1      } 
  34          /*
  35          uart will accepct only ascii characters
  36          integer value - 1234
  37                          '1' '2' '3' '4' 
  38          */
  39          //sending one integer value to uart based device from 8051 cpu
  40          void UART_Int(unsigned int n)
  41          {
  42   1              unsigned char a[5]={0}; 
  43   1              char i=0;
  44   1              
  45   1              if(n==0)
  46   1                      UART_Txchar('0');
  47   1              else
  48   1              {
  49   2                      while(n>0)
  50   2                      {       
  51   3                       a[i]=(n%10)+48;//0x30 / '0'
  52   3                       n=n/10;
  53   3                       i++;
  54   3                      }
  55   2          for(--i;i>=0;i--)
C51 COMPILER V9.02   UART                                                                  12/02/2023 18:12:59 PAGE 2   

  56   2              UART_Txchar(a[i]);
  57   2        }             
  58   1      } 
  59          //sending float value to the uart based device from 8051 cpu
  60          void UART_Float(float f,unsigned char ndp)
  61          {
  62   1              unsigned int i; char j;
  63   1              i=f;
  64   1              UART_Int(i);
  65   1              UART_Txchar('.');
  66   1              for(j=0;j<ndp;j++)
  67   1              {
  68   2                      f=(f-i)*10;
  69   2                      i=f;
  70   2                      UART_Txchar(i+48);
  71   2              }
  72   1      }       
  73          //receiving one string from uart based device nad transmit back to uart based device
  74          void UART_RxTx_String()
  75          {
  76   1              unsigned char arr[20],index=0;
  77   1              
  78   1              while(1)
  79   1              {
  80   2                      arr[index] = UART_Rxchar();
  81   2                      if((arr[index] == '\r') || (index==19))
  82   2                      {
  83   3                              arr[index] = '\0';
  84   3                              break;
  85   3                      }
  86   2                      index++;
  87   2              }
  88   1              UART_Str("\r\n");
  89   1              UART_Str("Received string is :");
  90   1              UART_Str(arr);
  91   1              UART_Str("\r\n");
  92   1      }          
  93                  
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    347    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      38
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
